FROM hashicorp/terraform:1.3.5 as terraform

FROM regclient/regctl:edge-alpine as regctl

FROM golang:1.19.3-alpine as go

RUN apk add --update git

RUN GO111MODULE=on go install github.com/raviqqe/liche@latest

FROM gcr.io/tekton-releases/github.com/tektoncd/pipeline/cmd/git-init:v0.45.0 as git-init

FROM alpine:3.20 as gh

ENV GITHUB_CLI_VERSION=2.0.0
RUN if [ $(uname -m) == "aarch64" ]; then ARCH=arm64; else ARCH=amd64; fi; \
  wget -O /tmp/gh.tgz https://github.com/cli/cli/releases/download/v${GITHUB_CLI_VERSION}/gh_${GITHUB_CLI_VERSION}_linux_${ARCH}.tar.gz && \
  tar --strip-components=2 --extract --file /tmp/gh.tgz \
  gh_${GITHUB_CLI_VERSION}_linux_${ARCH}/bin/gh && mv -v gh /bin/gh

FROM alpine:3.20 as yq

ENV VERSION=v4.30.5
RUN if [ $(uname -m) == "aarch64" ]; then ARCH=arm64; else ARCH=amd64; fi; \
  wget -O /tmp/yq.tgz  https://github.com/mikefarah/yq/releases/download/${VERSION}/yq_linux_${ARCH}.tar.gz  && \
  tar --extract --file /tmp/yq.tgz \
  ./yq_linux_${ARCH} && mv -v yq_linux_${ARCH} /bin/yq

FROM alpine:3.20

RUN apk add --update \
  git make bash jq curl gpg gnupg less openssh patch pigz \
  python3 py3-boto3 aws-cli && \
  apk --purge -v del py-pip && \
  rm -rf /var/cache/apk/* && \
  rm -rf $HOME/.cache

COPY --from=git-init /ko-app/git-init /usr/local/bin

COPY --from=terraform /bin/terraform /usr/local/bin

COPY --from=regctl /usr/local/bin/regctl /usr/local/bin

COPY --from=gh  /bin/gh /usr/local/bin

COPY --from=yq  /bin/yq /usr/local/bin

ENV GO_BIN /go/bin
ENV PATH "$GO_BIN:$PATH"

COPY --from=go /go/bin $GO_BIN

ENV BIN_3SCALE /opt/3scale/bin
ENV PATH "$BIN_3SCALE:$PATH"

ADD bin/ $BIN_3SCALE
RUN chmod -R 0755 $BIN_3SCALE
